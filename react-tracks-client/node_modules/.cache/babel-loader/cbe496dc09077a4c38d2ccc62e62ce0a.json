{"ast":null,"code":"import _taggedTemplateLiteral from \"/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/src/Root.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    {\\n        tracks {\\n            id\\n            title\\n            description\\n            url \\n        }\\n    }\\n\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        {\\n            me {\\n\\n                id\\n                username \\n                email\\n\\n            }\\n        }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport withRoot from \"./withRoot\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nvar Root = function Root() {\n  return React.createElement(Query, {\n    query: ME_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading,\n        error = _ref.error;\n    if (loading) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Loading\");\n    if (error) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Error\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, JSON.stringify(data));\n  });\n};\n\nvar ME_QUERY = gql(_templateObject());\nvar GET_TRACKS_QUERY = gql(_templateObject2());\nexport default withRoot(Root);","map":{"version":3,"sources":["/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/src/Root.js"],"names":["React","withRoot","Query","gql","BrowserRouter","Router","Switch","Route","Root","ME_QUERY","data","loading","error","JSON","stringify","GET_TRACKS_QUERY"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,SAASC,aAAa,IAAIC,MAA1B,EAAmCC,MAAnC,EAA2CC,KAA3C,QAAwD,kBAAxD;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,SACT,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAGC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,gBAA4B;AAAA,QAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,QAApBC,OAAoB,QAApBA,OAAoB;AAAA,QAAXC,KAAW,QAAXA,KAAW;AAEzB,QAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACb,QAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAEX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAP,CAAP;AAEH,GARL,CADS;AAAA,CAAb;;AAaA,IAAMD,QAAQ,GAAGN,GAAH,mBAAd;AAYA,IAAMY,gBAAgB,GAAIZ,GAAJ,oBAAtB;AAaA,eAAeF,QAAQ,CAACO,IAAD,CAAvB","sourcesContent":["import React from \"react\";\nimport withRoot from \"./withRoot\";\n\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\n\nimport { BrowserRouter as Router , Switch, Route } from 'react-router-dom';\n\n\nconst Root = () => (\n    <Query query={ ME_QUERY } >\n        {({data, loading, error}) => {\n\n            if (loading) return <div>Loading</div>\n            if (error) return <div>Error</div>\n\n            return <div>{ JSON.stringify(data) }</div>\n\n        }}\n    </Query>\n);\n\nconst ME_QUERY = gql`\n        {\n            me {\n\n                id\n                username \n                email\n\n            }\n        }\n`\n\nconst GET_TRACKS_QUERY =  gql`\n    {\n        tracks {\n            id\n            title\n            description\n            url \n        }\n    }\n\n`\n\n\nexport default withRoot(Root);\n"]},"metadata":{},"sourceType":"module"}