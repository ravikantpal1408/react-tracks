{"ast":null,"code":"import _taggedTemplateLiteral from \"/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/src/components/Track/DeleteTrack.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\n        mutation ($trackId: Int! ) {\\n          deleteTrack(trackId: $trackId ) {\\n            trackId\\n          }\\n        }\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TrashIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport { UserContext } from '../../Root';\nimport { GET_TRACKS_QUERY } from \"../../pages/App\";\nimport Error from \"../Shared/Error\";\n\nvar DeleteTrack = function DeleteTrack(_ref) {\n  var tracks = _ref.tracks;\n  var currentUser = useContext(UserContext);\n  var isCurrentUser = currentUser.id === tracks.postedBy.id;\n  return isCurrentUser && React.createElement(Mutation, {\n    mutation: DELETE_TRACK_MUTATION // variables = {{trackId: tracks.id}}\n    ,\n    onCompleted: function onCompleted(data) {\n      console.log(data);\n    },\n    refetchQueries: function refetchQueries() {\n      return [{\n        query: GET_TRACKS_QUERY\n      }];\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, function (deleteTrack, _ref2) {\n    var loading = _ref2.loading,\n        error = _ref2.error;\n    return React.createElement(IconButton, {\n      onClick: deleteTrack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(TrashIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  });\n};\n\nvar DELETE_TRACK_MUTATION = gql(_templateObject());\nexport default DeleteTrack;","map":{"version":3,"sources":["/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/src/components/Track/DeleteTrack.js"],"names":["React","useContext","IconButton","TrashIcon","Mutation","gql","UserContext","GET_TRACKS_QUERY","Error","DeleteTrack","tracks","currentUser","isCurrentUser","id","postedBy","DELETE_TRACK_MUTATION","data","console","log","query","deleteTrack","loading","error"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0CAAtB;AAGA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA,MAAZC,MAAY,QAAZA,MAAY;AAEhC,MAAMC,WAAW,GAAGV,UAAU,CAACK,WAAD,CAA9B;AACA,MAAMM,aAAa,GAAGD,WAAW,CAACE,EAAZ,KAAmBH,MAAM,CAACI,QAAP,CAAgBD,EAAzD;AAKA,SAAOD,aAAa,IAClB,oBAAC,QAAD;AACI,IAAA,QAAQ,EAAEG,qBADd,CAEI;AAFJ;AAGI,IAAA,WAAW,EAAI,qBAAAC,IAAI,EAAG;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KALL;AAOI,IAAA,cAAc,EAAE;AAAA,aAAM,CACpB;AACEG,QAAAA,KAAK,EAAEZ;AADT,OADoB,CAAN;AAAA,KAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaM,UAACa,WAAD;AAAA,QAAgBC,OAAhB,SAAgBA,OAAhB;AAAA,QAAyBC,KAAzB,SAAyBA,KAAzB;AAAA,WAEA,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAKF,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFA;AAAA,GAbN,CADF;AAuBD,CA/BD;;AAiCA,IAAML,qBAAqB,GAAGV,GAAH,mBAA3B;AAUA,eAAeI,WAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TrashIcon from \"@material-ui/icons/DeleteForeverOutlined\";\n\n\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\n\nimport { UserContext } from '../../Root';\nimport { GET_TRACKS_QUERY } from \"../../pages/App\";\n\nimport Error from \"../Shared/Error\";\n\n\n\n\nconst DeleteTrack = ({tracks}) => {\n\n  const currentUser = useContext(UserContext)\n  const isCurrentUser = currentUser.id === tracks.postedBy.id\n\n\n\n\n  return isCurrentUser && (\n    <Mutation \n        mutation={DELETE_TRACK_MUTATION}\n        // variables = {{trackId: tracks.id}}\n        onCompleted= { data =>{\n          console.log(data)\n        }}\n\n        refetchQueries={() => [\n          {\n            query: GET_TRACKS_QUERY\n          }\n        ]}\n        >\n        { (deleteTrack ,{ loading, error }) => (\n          \n          <IconButton onClick = { deleteTrack } >\n            <TrashIcon/>\n          </IconButton>\n        )}\n    </Mutation>\n  \n  );\n};\n\nconst DELETE_TRACK_MUTATION = gql`\n\n        mutation ($trackId: Int! ) {\n          deleteTrack(trackId: $trackId ) {\n            trackId\n          }\n        }\n\n`\n\nexport default DeleteTrack;\n"]},"metadata":{},"sourceType":"module"}