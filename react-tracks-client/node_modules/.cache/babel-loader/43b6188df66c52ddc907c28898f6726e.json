{"ast":null,"code":"import _defineProperty from \"/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/src/components/Auth/Register.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      mutation ($username: String!, $email: String!, $password:String! )\\n      {\\n        createUser(username: $username, email: $email, password: $password )\\n        {\\n\\n            user {\\n              username\\n              email \\n              password\\n            }\\n\\n        }\\n      }\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Gavel from \"@material-ui/icons/Gavel\";\nimport VerifiedUserTwoTone from \"@material-ui/icons/VerifiedUserTwoTone\";\n\nvar Register = function Register(_ref) {\n  var classes = _ref.classes;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Gavel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"headline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Register\"), React.createElement(Mutation, {\n    mutation: REGISTER_MUTATION,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, function () {\n    return React.createElement(\"form\", {\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Input, {\n      id: \"username\",\n      onChange: function onChange(event) {\n        return setUsername(event.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      id: \"email\",\n      type: \"email\",\n      onChange: function onChange(event) {\n        return setEmail(event.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      id: \"password\",\n      type: \"password\",\n      onChange: function onChange(event) {\n        return setPassword(event.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"secondary\",\n      className: classes.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Button, {\n      color: \"primary\",\n      variant: \"outlined\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Previous user ? Log In here !!\"));\n  })));\n};\n\nvar REGISTER_MUTATION = gql(_templateObject());\n\nvar styles = function styles(theme) {\n  return {\n    root: _defineProperty({\n      width: \"auto\",\n      display: \"block\",\n      marginLeft: theme.spacing.unit * 3,\n      marginRight: theme.spacing.unit * 3\n    }, theme.breakpoints.up(\"md\"), {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }),\n    paper: {\n      marginTop: theme.spacing.unit * 8,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      padding: theme.spacing.unit * 2\n    },\n    title: {\n      marginTop: theme.spacing.unit * 2,\n      color: theme.palette.openTitle\n    },\n    avatar: {\n      margin: theme.spacing.unit,\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: \"100%\",\n      marginTop: theme.spacing.unit\n    },\n    submit: {\n      marginTop: theme.spacing.unit * 2,\n      marginBottom: theme.spacing.unit * 2\n    },\n    icon: {\n      padding: \"0px 2px 2px 0px\",\n      verticalAlign: \"middle\",\n      color: \"green\"\n    }\n  };\n};\n\nexport default withStyles(styles)(Register);","map":{"version":3,"sources":["/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/src/components/Auth/Register.js"],"names":["React","useState","Mutation","gql","withStyles","Typography","Avatar","FormControl","Paper","Input","InputLabel","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Gavel","VerifiedUserTwoTone","Register","classes","username","setUsername","email","setEmail","password","setPassword","root","paper","avatar","REGISTER_MUTATION","form","event","target","value","submit","styles","theme","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","marginTop","flexDirection","alignItems","padding","title","color","palette","openTitle","margin","backgroundColor","secondary","main","marginBottom","icon","verticalAlign"],"mappings":"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","sourcesContent":["import React , { useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Gavel from \"@material-ui/icons/Gavel\";\nimport VerifiedUserTwoTone from \"@material-ui/icons/VerifiedUserTwoTone\";\n\nconst Register = ({ classes }) => {\n\n  const [username, setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword ] = useState(\"\")\n\n\n  return (<div className={classes.root} >\n            <Paper className={classes.paper}>\n              <Avatar className={classes.avatar}>\n                <Gavel/>  \n              </Avatar>\n              <Typography variant=\"headline\">\n                  Register\n              </Typography>\n\n              <Mutation mutation={REGISTER_MUTATION}>\n                {()=>{\n                  return (\n                    <form className={classes.form}>\n                      <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"username\" >Username</InputLabel>\n\n                        <Input id=\"username\"   onChange={\n                          event => setUsername(event.target.value)}\n                          />                      \n                      </FormControl>\n                      <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel>Email</InputLabel>\n\n                        <Input id=\"email\" type=\"email\" onChange={\n                          event => setEmail(event.target.value)\n                        }\n\n                         />                      \n                      </FormControl>\n                      <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"password\">Password</InputLabel>\n\n                        <Input id=\"password\" type=\"password\" onChange={ event => setPassword(event.target.value)}  />                      \n                      </FormControl>\n                      <Button type=\"submit\" fullWidth variant=\"contained\" color=\"secondary\" className={classes.submit}>\n                        Register\n                      </Button>\n                      <Button color=\"primary\" variant=\"outlined\" fullWidth>\n                        Previous user ? Log In here !!\n                      </Button>\n\n                    </form>\n                  )\n                }}\n              </Mutation>\n\n            </Paper>\n  </div>);\n};\n\n\nconst REGISTER_MUTATION = gql`\n      mutation ($username: String!, $email: String!, $password:String! )\n      {\n        createUser(username: $username, email: $email, password: $password )\n        {\n\n            user {\n              username\n              email \n              password\n            }\n\n        }\n      }\n\n`\n\nconst styles = theme => ({\n  root: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(\"md\")]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n      \n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing.unit * 2\n  },\n  title: {\n    marginTop: theme.spacing.unit * 2,\n    color: theme.palette.openTitle\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2\n  },\n  icon: {\n    padding: \"0px 2px 2px 0px\",\n    verticalAlign: \"middle\",\n    color: \"green\"\n  }\n});\n\nexport default withStyles(styles)(Register);\n"]},"metadata":{},"sourceType":"module"}