{"ast":null,"code":"import _taggedTemplateLiteral from \"/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/src/components/Track/LikeTrack.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\n          mutation ($trackId: Int! ) {\\n            createLike(trackId: $trackId )\\n            {\\n              track{\\n                id\\n                likes {\\n                  id\\n                }\\n              }\\n            }\\n          }\\n\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\n\nvar LikeTrack = function LikeTrack(_ref) {\n  var classes = _ref.classes,\n      tracks = _ref.tracks,\n      likeCount = _ref.likeCount;\n  return React.createElement(Mutation, {\n    mutation: CREATE_LIKE_MUTATION,\n    variables: {\n      trackId: tracks.id\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, function (createLike) {\n    return React.createElement(IconButton, {\n      className: classes.iconButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, likeCount, React.createElement(ThumbUpIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  });\n};\n\nvar CREATE_LIKE_MUTATION = gql(_templateObject());\n\nvar styles = function styles(theme) {\n  return {\n    iconButton: {\n      color: \"deeppink\"\n    },\n    icon: {\n      marginLeft: theme.spacing.unit / 2\n    }\n  };\n};\n\nexport default withStyles(styles)(LikeTrack);","map":{"version":3,"sources":["/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/src/components/Track/LikeTrack.js"],"names":["React","withStyles","IconButton","ThumbUpIcon","Mutation","gql","LikeTrack","classes","tracks","likeCount","CREATE_LIKE_MUTATION","trackId","id","createLike","iconButton","icon","styles","theme","color","marginLeft","spacing","unit"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAGA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAqC;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAxBC,MAAwB,QAAxBA,MAAwB;AAAA,MAAfC,SAAe,QAAfA,SAAe;AACrD,SACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEC,oBADZ;AAEE,IAAA,SAAS,EAAE;AAAEC,MAAAA,OAAO,EAAEH,MAAM,CAACI;AAAlB,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,UAAAC,UAAU;AAAA,WACR,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEN,OAAO,CAACO,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,SADH,EAEE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAGF,OAAO,CAACQ,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADQ;AAAA,GANd,CADF;AAiBD,CAlBD;;AAoBA,IAAML,oBAAoB,GAAGL,GAAH,mBAA1B;;AAmBA,IAAMW,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBH,IAAAA,UAAU,EAAE;AACVI,MAAAA,KAAK,EAAE;AADG,KADW;AAIvBH,IAAAA,IAAI,EAAE;AACJI,MAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAcC,IAAd,GAAqB;AAD7B;AAJiB,GAAL;AAAA,CAApB;;AASA,eAAepB,UAAU,CAACe,MAAD,CAAV,CAAmBV,SAAnB,CAAf","sourcesContent":["import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\n\n\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\n\nconst LikeTrack = ({ classes , tracks , likeCount}) => {\n  return (\n    <Mutation \n      mutation={CREATE_LIKE_MUTATION}\n      variables={{ trackId: tracks.id }}\n      \n      >\n      {\n        createLike => (\n          <IconButton className={classes.iconButton}>\n            {likeCount}\n            <ThumbUpIcon className={ classes.icon} />\n\n          </IconButton>\n        )\n      }\n    </Mutation>\n  )\n};\n\nconst CREATE_LIKE_MUTATION = gql`\n\n          mutation ($trackId: Int! ) {\n            createLike(trackId: $trackId )\n            {\n              track{\n                id\n                likes {\n                  id\n                }\n              }\n            }\n          }\n\n\n`\n\n\n\nconst styles = theme => ({\n  iconButton: {\n    color: \"deeppink\"\n  },\n  icon: {\n    marginLeft: theme.spacing.unit / 2\n  }\n});\n\nexport default withStyles(styles)(LikeTrack);\n"]},"metadata":{},"sourceType":"module"}