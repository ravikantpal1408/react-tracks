{"ast":null,"code":"import _taggedTemplateLiteral from \"/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/src/components/Track/SearchTracks.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($search: String) {\\n    tracks(search: $search) {\\n      id\\n      title\\n      description\\n      url\\n      likeSet {\\n        id\\n      }\\n      postedBy {\\n        id\\n        username\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useRef } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\n\nvar SearchTracks = function SearchTracks(_ref) {\n  var classes = _ref.classes,\n      setSearchResults = _ref.setSearchResults;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var inputEl = useRef();\n\n  var clearSearchInput = function clearSearchInput() {\n    setSearchResults([]);\n    search(\"\");\n  };\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event, client) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.next = 3;\n              return client.query({\n                query: SEARCH_TRACK_QUERY,\n                variables: {\n                  search: search\n                }\n              });\n\n            case 3:\n              res = _context.sent;\n              console.log({\n                res: res\n              });\n              setSearchResults(res.data.tracks);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(ApolloConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, function (client) {\n    return React.createElement(\"form\", {\n      onSubmit: function onSubmit(event) {\n        return handleSubmit(event, client);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      elevation: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: clearSearchInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(ClearIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(TextField, {\n      fullWidth: true,\n      placeholder: \"Search All Tracks\",\n      InputProps: {\n        disableUnderline: true\n      },\n      value: search,\n      inputRef: inputEl,\n      onChange: function onChange(event) {\n        return setSearch(event.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(IconButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))));\n  });\n};\n\nvar SEARCH_TRACK_QUERY = gql(_templateObject());\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      padding: \"2px 4px\",\n      margin: theme.spacing.unit,\n      display: \"flex\",\n      alignItems: \"center\"\n    }\n  };\n};\n\nexport default withStyles(styles)(SearchTracks);","map":{"version":3,"sources":["/Volumes/MyMacDrive128/Python/react-tracks/react-tracks-client/src/components/Track/SearchTracks.js"],"names":["React","useState","useRef","withStyles","TextField","ClearIcon","Paper","IconButton","SearchIcon","ApolloConsumer","gql","SearchTracks","classes","setSearchResults","search","setSearch","inputEl","clearSearchInput","handleSubmit","event","client","preventDefault","query","SEARCH_TRACK_QUERY","variables","res","console","log","data","tracks","root","disableUnderline","target","value","styles","theme","padding","margin","spacing","unit","display","alignItems"],"mappings":"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","sourcesContent":["import React,{ useState, useRef } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport { ApolloConsumer } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\n\nconst SearchTracks = ({ classes, setSearchResults }) => {\n\n  const [search, setSearch] = useState(\"\");\n  const inputEl = useRef()\n\n\n  const clearSearchInput = () =>{\n\n    setSearchResults([])\n    search(\"\")\n\n  }\n\n\n\n  const handleSubmit = async (event, client) => {\n    event.preventDefault();\n    const res = await client.query({\n      query: SEARCH_TRACK_QUERY,\n      variables: {\n          search\n      }\n    })\n\n\n    console.log({res})\n    setSearchResults(res.data.tracks)\n\n\n  };\n\n  return (\n    <ApolloConsumer>\n      {client => (\n        <form onSubmit={event => handleSubmit(event, client)}>\n          <Paper className={classes.root} elevation={1}>\n            <IconButton onClick={clearSearchInput}>\n              <ClearIcon />\n            </IconButton>\n            <TextField\n              fullWidth\n              placeholder=\"Search All Tracks\"\n              InputProps={{\n                disableUnderline: true\n              }}\n              value={search}\n              inputRef={inputEl}\n              onChange = {event => setSearch(event.target.value)}\n\n\n            />\n\n            <IconButton type=\"submit\">\n              <SearchIcon />\n            </IconButton>\n          </Paper>\n        </form>\n      )}\n    </ApolloConsumer>\n  );\n};\n\nconst SEARCH_TRACK_QUERY = gql`\n  query($search: String) {\n    tracks(search: $search) {\n      id\n      title\n      description\n      url\n      likeSet {\n        id\n      }\n      postedBy {\n        id\n        username\n      }\n    }\n  }\n`;\n\nconst styles = theme => ({\n  root: {\n    padding: \"2px 4px\",\n    margin: theme.spacing.unit,\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n});\n\nexport default withStyles(styles)(SearchTracks);\n"]},"metadata":{},"sourceType":"module"}